server:
  listen: ":7600"
  max_message_bytes: 1048576
  read_timeout_ms: 15000
  ingest_queue_size: 8192
  
postgres:
  enabled: false
  dsn: "postgres://data_kernel:CHANGE_ME_STRONG@127.0.0.1:5432/data_kernel_db?sslmode=disable"
  max_conns: 8
  conn_max_lifetime_ms: 600000
  apply_migrations: true
  queue_size: 1024
  batch_size: 1000
  batch_max_wait_ms: 200

redis:
  enabled: false
  addr: "127.0.0.1:6379"
  username: "data_kernel"
  password: "CHANGE_ME_STRONG"
  db: 0
  key_prefix: "fdc:"
  stream: "events"
  register_stream: "register"
  register_resp_stream: "register:resp"
  control_resp_stream: "control:resp"
  maxlen_approx: 1000000
  queue_size: 2048
  publish_enabled: false   # publish to Redis from router (feature flag)
  consumer_enabled: true   # enable kernel consumer of Redis stream
  consumer_group: "kernel"
  consumer_name: "kernel-1" # optional; kernel will append timestamp
  read_count: 100
  block_ms: 5000
  dlq_stream: "events:dlq"

logging:
  level: "info"
  buffer: 4096
  output: "stdout"

spill:
  enabled: true
  directory: "./spill"
  rotate_mb: 512
  compression: "none"

auth:
  enabled: true
  require_token: true
  issuer: "fdc-kernel"
  audience: "fdc-events"
  key_id: "kid-1"
  # Public verification keys by key id (base64 raw Ed25519 public key)
  public_keys:
    kid-1: "<BASE64_PUBLIC_KEY>"
  # Kernel signing private key (base64 raw Ed25519). Required if kernel issues tokens.
  private_key: "<BASE64_PRIVATE_KEY>"
  # SSH CA public key used to verify admin certificates (OpenSSH authorized_keys format).
  # This is the cluster CA public key that signs admin user certificates.
  admin_ssh_ca: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEXAMPLE_CA_PUBKEY cluster-admin-ca"
  cache_ttl_seconds: 300
  skew_seconds: 60

